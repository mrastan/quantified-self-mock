
<style type="text/css">
.axis text {
  font-size: 10px;
  font-family: Lato, sans-serif;
  font-weight: 600;
  fill: #444;
}

.axis path,
.axis line {
  fill: none;
  stroke: #444;
  shape-rendering: crispEdges;
}

.bar, .bar-active {
  fill: rgb(160,160,160);
  fill-opacity: .9;
}
.bar-active {
  fill: rgb(24, 193, 155);
  fill-opacity: 1;
}

.x.axis path,
.x.axis line {
  display: none;
}

.vline {
  stroke: rgb(24, 193, 155);
  stroke-width: 2;
  stroke-dasharray: 5,5;
}

label {
  position: absolute;
  top: 10px;
  right: 10px;
}
</style>

<div class="qs-box pure-g" id="qs-benchmark"> 	
	<div class="pure-u-1-2">		    			
		<h4 class="qs-box-title" style="margin-bottom:0em;">
			Benchmark
			<span>
				(
				<b style="color:rgba(24, 193, 155, 1)">you</b> 
				against 
				<b style="">your peers</b>
				)	
			</span>
		</h4>		    
	</div>
	<div class="pure-u-1-2 qs-box-controls" id="qs-box-activity">
		<a class="ui-selected" href="#">Work</a>
		<a class="" href="#">Online</a>
		<a class="" href="#">Outdoor</a>
	</div>	
	<div class="pure-g">
		<div class="pure-u-1-3">
		<canvas id="radarChart" width="190" height="185"></canvas>
		</div>
		<div class="pure-u-2-3">
			<div id='qsBarChart'></div>
		</div>
	</div> 
	
</div>

<script type="text/javascript">
$(function() {

//RADAR CHART
var ctx = $("#radarChart").get(0).getContext("2d");

var radarChartData = {
	labels : ["Work", "Sleep", "Transportation", "Online", "Sport"],
	datasets : [
		{
			fillColor : "rgba(160,160,160,0.4)",
			strokeColor : "rgba(150,150,150,1)",
			pointColor : "rgba(150,150,150,1)",
			pointStrokeColor : "#fff",
			data : [70,85,35,60,70]
		},
		{
			fillColor : "rgba(24, 193, 155, 0.5)",
			strokeColor : "rgba(24, 193, 155, 1)",
			pointColor : "rgba(24, 193, 155, 1)",
			pointStrokeColor : "#fff",
			data : [95,55,80,100,10]
		}
	]
}

var radarChartOptions = {
	scaleLineColor: "rgba(0,0,0,.3)",
	pointLabelFontSize : 10,
	pointLabelFontColor: "#444",
	pointLabelFontStyle: "bold",

	scaleShowLabelBackdrop : false,
	scaleOverride: true,
	scaleSteps: 5,
	scaleStepWidth: 20,
	scaleStartValue: 0,
}

var radarChart = new Chart(ctx).Radar(radarChartData, radarChartOptions);


//BAR CHART
var filename = 'data/weekday-stats.tsv'

var margin = {top: 20, right: 20, bottom: 30, left: 40},
    width = 430 - margin.left - margin.right,
    height = 175 - margin.top - margin.bottom;

var formatPercent = d3.format(".0%");

var x = d3.scale.ordinal()
    .rangeRoundBands([0, width], .1, 1);

var y = d3.scale.linear()
    .range([height, 0]);

var xAxis = d3.svg.axis()
    .scale(x)
    .orient("bottom");

var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")
    .tickFormat(formatPercent);

var svg = d3.select("#qsBarChart").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.tsv(filename, function(error, data) {
  data.forEach(function(d) {
    d.frequency = +d.frequency;
  });

  x.domain(data.map(function(d) { return d.letter; }));
  y.domain([0, d3.max(data, function(d) { return d.frequency; })]);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Percentage");
      
  svg.append("line")
    .attr("class", "vline")
    .attr("x1", x("7.5") -1)
    .attr("x2", x("7.5") -1)
    .attr("y1", y(1))
    .attr("y1", y(0))    

  svg.append("line")
    .attr("class", "vline")
    .attr("x1", x("9") -1)
    .attr("x2", x("9") -1)
    .attr("y1", y(1))
    .attr("y1", y(0))


  svg.selectAll(".bar")
      .data(data)
    .enter().append("rect")
      .attr("class", function(d) { return d.active == 0 ? "bar" : "bar-active"})
      .attr("x", function(d) { return x(d.letter); })
      .attr("width", x.rangeBand())
      .attr("y", function(d) { return y(d.frequency); })
      .attr("height", function(d) { return height - y(d.frequency); })
      .attr("rx", 2);

  d3.select("input").on("change", change);

 // var sortTimeout = setTimeout(function() {
 //   d3.select("input").property("checked", true).each(change);
 // }, 2000);

  function change() {
    clearTimeout(sortTimeout);

    var x0 = x.domain(data.sort(this.checked
        ? function(a, b) { return b.frequency - a.frequency; }
        : function(a, b) { return d3.ascending(a.letter, b.letter); })
        .map(function(d) { return d.letter; }))
        .copy();

    var transition = svg.transition().duration(750),
        delay = function(d, i) { return i * 50; };

    transition.selectAll(".bar")
        .delay(delay)
        .attr("x", function(d) { return x0(d.letter); });

    transition.select(".x.axis")
        .call(xAxis)
      .selectAll("g")
        .delay(delay);
  }
});




})

</script>
