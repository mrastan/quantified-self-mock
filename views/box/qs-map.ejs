<script src='http://api.tiles.mapbox.com/mapbox.js/v1.3.1/mapbox.js'></script>
<script src='js/leaflet.polylineDecorator.min.js'></script>
<link href='http://api.tiles.mapbox.com/mapbox.js/v1.3.1/mapbox.css' rel='stylesheet' />

<script src='data/qs_poi_bern.js'></script>
<script src='data/qs_path_bern.js'></script>

<style type="text/css">
#map { 
	position:absolute; 
	width: 620px; 
	height: 200px;
    border: 1px solid white;
}
.leaflet-popup-content-wrapper, .leaflet-popup-tip {
    background: rgba(255,255,255,1);
    box-shadow:0 2px 4px rgba(0,0,0,0.5);
}
.leaflet-popup-content {
    margin: 0.5em;
}
.popup {
    color: #333;
    text-align: center;
}
.popup h3 {
    margin: 0.5em;
}
.popup span {
    font-size: 10px;
}

</style>

<div class="qs-box"><div id='map'></div></div>

<script type='text/javascript'>

var getActivityColor = d3.scale.ordinal().range(colorbrewer.Set1['qs']);

//var map = L.mapbox.map('map', 'mrastan.map-yqc0qxly')
var map = L.mapbox.map('map', 'mrastan.map-r6s6jvr7')
    .setView([46.943523869295355, 7.452249526977539], 12);
map.dragging.disable();

// POI layer 
var markerLayer = L.mapbox.markerLayer().addTo(map);
markerLayer.on('layeradd', function(e) {
    var marker = e.layer,
        feature = marker.feature,
        coor = feature.geometry.coordinates;
        //img_url = 'http://maps.googleapis.com/maps/api/streetview?size=100x60&location=' + coor[1] + ',%20' + coor[0] + '&sensor=false' 

    var popupContent =  '<div class="popup">' +
                        //'<img src="' + img_url + '">' +
                        '<h3>' + 
                        feature.properties.title + 
                        '  <span style="color:' + feature.properties.timeColor + '">' + feature.properties.time + '</span>' + 
                        '</h3>' +
                        '</div>';

    marker.bindPopup(popupContent,{
        closeButton: false,
        minWidth: 30
    });
});
markerLayer.setGeoJSON(qs_poi_bern);

// path layer
var i = 0;
var geoPath = L.geoJson(qs_path_bern);

geoPath.eachLayer(function(layer) {
  var activity_color = getActivityColor(i++);

  var path = L.polyline(layer.getLatLngs(), {});
  var pathDeco = L.polylineDecorator(path, {
    patterns: [
            {offset: 0, repeat: 11, symbol: new L.Symbol.Dash({
                                                pixelSize: 0,
                                                pathOptions: {weight: 7, color: activity_color, opacity: 0.8}
                                              })}
        ]
  }).addTo(map);
});



// Cycle over markers
function cycle(markers) {
    var i = 0;
    function run() {
        if (++i > markers.length - 1) i = 0;
        
        markers[i].openPopup();
        map.setView(markers[i].getLatLng(), 13, {pan: {animate: true}, zoom: { animate: true }});
        
        window.setTimeout(run, 5000);
    }
    run();
}
</script>